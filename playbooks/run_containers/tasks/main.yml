---
- name: Ensure SSH containers are running (Docker)
  community.docker.docker_container:
    name: "{{ item.name }}"
    image: "{{ item.image }}"
    state: started
    restart_policy: always
    published_ports:
      - "{{ item.port }}:22"
  loop: "{{ containers }}"
  when: container_engine == "docker"

- name: Ensure SSH containers are running (Podman)
  containers.podman.podman_container:
    name: "{{ item.name }}"
    image: "{{ item.image }}"
    state: started
    restart_policy: always
    publish:
      - "{{ item.port }}:22"
  loop: "{{ containers }}"
  when: container_engine == "podman"

- name: Ensure devuser exists in containers
  community.docker.docker_container_exec:
    container: "{{ item.name }}"
    command: sh -c "id -u {{ ssh_user }} || useradd -m -s /bin/bash {{ ssh_user }}"
  loop: "{{ containers }}"
  when: container_engine == "docker"

- name: Ensure devuser exists in containers (Podman)
  containers.podman.podman_container_exec:
    name: "{{ item.name }}"
    command: sh -c "id -u {{ ssh_user }} || useradd -m -s /bin/bash {{ ssh_user }}"
  loop: "{{ containers }}"
  when: container_engine == "podman"

- name: Ensure .ssh folder exists in containers
  community.docker.docker_container_exec:
    container: "{{ item.name }}"
    command: |
      mkdir -p /home/{{ ssh_user }}/.ssh
      chmod 700 /home/{{ ssh_user }}/.ssh
      chown {{ ssh_user }}:{{ ssh_user }} /home/{{ ssh_user }}/.ssh
  loop: "{{ containers }}"
  when: container_engine == "docker"

- name: Ensure .ssh folder exists in containers (Podman)
  containers.podman.podman_container_exec:
    name: "{{ item.name }}"
    command: |
      mkdir -p /home/{{ ssh_user }}/.ssh
      chmod 700 /home/{{ ssh_user }}/.ssh
      chown {{ ssh_user }}:{{ ssh_user }} /home/{{ ssh_user }}/.ssh
  loop: "{{ containers }}"
  when: container_engine == "podman"

- name: Copy public key into authorized_keys
  community.docker.docker_container_exec:
    container: "{{ item.name }}"
    command: sh -c "echo '{{ lookup('file', pubkey_file) }}' > /home/{{ ssh_user }}/.ssh/authorized_keys"
  loop: "{{ containers }}"
  when: container_engine == "docker"

- name: Copy public key into authorized_keys (Podman)
  containers.podman.podman_container_exec:
    name: "{{ item.name }}"
    command: sh -c "echo '{{ lookup('file', pubkey_file) }}' > /home/{{ ssh_user }}/.ssh/authorized_keys"
  loop: "{{ containers }}"
  when: container_engine == "podman"

- name: Set permissions on authorized_keys
  community.docker.docker_container_exec:
    container: "{{ item.name }}"
    command: |
      chmod 600 /home/{{ ssh_user }}/.ssh/authorized_keys
      chown {{ ssh_user }}:{{ ssh_user }} /home/{{ ssh_user }}/.ssh/authorized_keys
  loop: "{{ containers }}"
  when: container_engine == "docker"

- name: Set permissions on authorized_keys (Podman)
  containers.podman.podman_container_exec:
    name: "{{ item.name }}"
    command: |
      chmod 600 /home/{{ ssh_user }}/.ssh/authorized_keys
      chown {{ ssh_user }}:{{ ssh_user }} /home/{{ ssh_user }}/.ssh/authorized_keys
  loop: "{{ containers }}"
  when: container_engine == "podman"
